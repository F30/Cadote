From 919e36314bcfe4af5e5d0d632260729668f3bb71 Mon Sep 17 00:00:00 2001
From: Felix Dreissig <felix.dreissig@fau.de>
Date: Tue, 6 Apr 2021 07:45:48 +0000
Subject: [PATCH 5/8] Enclavization Passes: Use exception for error handling

LLVM needs to be compiled with `-DLLVM_ENABLE_EH=ON`.
---
 llvm/lib/Transforms/Utils/Enclavization/Support.cpp | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/llvm/lib/Transforms/Utils/Enclavization/Support.cpp b/llvm/lib/Transforms/Utils/Enclavization/Support.cpp
index 61b550356fa1..d8cf58c92894 100644
--- a/llvm/lib/Transforms/Utils/Enclavization/Support.cpp
+++ b/llvm/lib/Transforms/Utils/Enclavization/Support.cpp
@@ -1,4 +1,4 @@
-#include <assert.h>
+#include <stdexcept>
 #include <string>
 #include <vector>
 
@@ -42,7 +42,10 @@ std::vector<CallBase *> getCallsToWrap(Module &mod) {
           // Prefixes for old and new (v0) Rust mangled names, Linux-only
           if (name.startswith("_ZN") || name.startswith("_R")) {
             char *mangledName = strdup(name.str().c_str());
-            assert(rustc_demangle(mangledName, demangledName, DEMANGLED_LEN_MAX) != 0 && "Demangling failed");
+            if (rustc_demangle(mangledName, demangledName, DEMANGLED_LEN_MAX) == 0) {
+              free(mangledName);
+              throw std::runtime_error("Demangling failed");
+            }
             name = StringRef(demangledName);
             free(mangledName);
           }
-- 
2.25.1

